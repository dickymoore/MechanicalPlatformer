name: Automation Workflow for Mechanical Platformer

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write  # Explicitly set write permission for contents


jobs:
  generate-test-code:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt

    - name: Run generate_test_code
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        source venv/bin/activate
        python ./scripts/main.py generate_test_code
        python ./scripts/main.py commit_changes

  generate-terraform-code:
    runs-on: ubuntu-latest
    needs: generate-test-code
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt

    - name: Run generate_terraform_code
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        source venv/bin/activate
        python ./scripts/main.py generate_terraform_code
        python ./scripts/main.py commit_changes

  apply-terraform-code:
    runs-on: ubuntu-latest
    needs: generate-terraform-code
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt

    - name: Run apply_terraform_code
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        source venv/bin/activate
        python ./scripts/main.py apply_terraform_code

  test-outcomes:
    runs-on: ubuntu-latest
    needs: apply-terraform-code
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt

    - name: Run test_outcomes
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        source venv/bin/activate
        python ./scripts/main.py test_outcomes

    - name: Check outcome
      id: check_outcome
      run: |
        if [ $? -ne 0 ]; then
          echo "outcome=fail" >> $GITHUB_ENV
        else
          echo "outcome=pass" >> $GITHUB_ENV
        fi

    - name: Dispatch workflow on failure
      if: env.outcome == 'fail'
      uses: actions/github-script@v4
      with:
        script: |
          github.rest.actions.createWorkflowDispatch({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'automation.yml',
            ref: 'main'
          })
